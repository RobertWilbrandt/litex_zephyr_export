#!/usr/bin/env python3
# pylint: disable=invalid-name
"""Generate a zephyr board from a litex export"""

import argparse
import logging
import os
import sys

from litex_zephyr_export.exporter import Exporter
from litex_zephyr_export.file_exporter import SoCDevicetreeExporter
from litex_zephyr_export.svd_parser import SvdParser

SVD_PATH = "csr.svd"


def parse_args():
    """Parse cli arguments

    :return: Dictionary containing parsed arguments
    :rtype: dict
    """
    parser = argparse.ArgumentParser(
        description="Generate a zephyr board from a litex export"
    )

    parser.add_argument(
        "-v", "--verbose", action="store_true", help="Print verbose logging output"
    )

    args = parser.parse_args()

    result = {"log_level": logging.INFO}

    if args.verbose:
        result["log_level"] = logging.DEBUG

    return result


def main():
    """Script entry point"""
    args = parse_args()

    parser = SvdParser(args["log_level"])

    try:
        soc = parser.parse_file(SVD_PATH)

        exporter = Exporter()
        exporter.add_file_exporter(SoCDevicetreeExporter(soc, args["log_level"]))

        exporter.export()

    except FileNotFoundError as ex:
        print(f"Could not open SVD export {SVD_PATH}: {ex}", file=sys.stderr)
        sys.exit(os.EX_NOINPUT)

    except RuntimeError as ex:
        print(f"Error while parsing {SVD_PATH}: {ex}", file=sys.stderr)
        sys.exit(os.EX_DATAERR)


if __name__ == "__main__":
    main()
